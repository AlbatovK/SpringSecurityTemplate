server:
  port: ${SERVICE_PORT:8080}

spring:

  application:
    name: spring-security

  main:
    banner-mode: off

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  cache:
    type: redis
    redis:
      cache-null-values: false
      time-to-live: ${CACHE_TTL:40000}

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://localhost:5432/database}
    username: ${DB_USER:user}
    password: ${DB_PASSWORD:password}

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    database: postgresql

  liquibase:
    enabled: false
    drop-first: false
    default-schema: public

  security:
    user:
      name: ${SEC_USER_NAME:user}
      password: ${SEC_USER_PASSWORD:password}

springdoc:
  api-docs:
    path: /api-docs
  show-actuator: true
  swagger-ui:
    show-extensions: true
    operations-sorter: method

management:
  tracing:
    sampling:
      probability: 1.0

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    org.hibernate.type.descriptor.sql: trace

jwt:
  key: ${JWT_SIGNING_KEY:9ab3fee80daeaf6f8c80d420be7ad1e29a6fef1cde8efafd8a551789c479c2b6}
  access-token-expiration: ${JWT_ACCESS_EXP:36000000}
  refresh-token-expiration: ${JWT_REFRESH_EXP:2592000000}

api-info:
  contact-email: ${INFO_EMAIL:albatovkonstantin@yandex.ru}
  contact-url: ${INFO_CONTACT:https://idk.com}
  contact-name: ${INFO_NAME:Albatov Konstantin}
  description: ${INFO_DESCR:Spring Security App On Steroids}
  external-docs-description: ${INFO_EXT_DESCR:External docs :)}
  license-url: ${INFO_LICENSE_URL:https://idk.com}
  external-docs-url: ${INFO_EXT_URL:https://idk.com}
  license-name: ${INFO_LICENSE_NAME:License Name}
  title: ${INFO_TITLE:Spring Security}
  version: ${INFO_VERSION:v0.0.1}